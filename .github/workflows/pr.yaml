name: PR and Dialogflow CX Workflow

on:
  pull_request:
    types: [opened, synchronize, reopened, closed, edited]
    branches:
      - '**'
  push:
    branches:
      - '**'

jobs:
  pr_workflow:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Debug Event Information
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          echo "Repository: ${{ github.repository }}"
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "PR number: ${{ github.event.pull_request.number }}"
            echo "PR title: ${{ github.event.pull_request.title }}"
            echo "PR merged: ${{ github.event.pull_request.merged }}"
            echo "Base ref: ${{ github.base_ref }}"
            echo "Head ref: ${{ github.head_ref }}"
          elif [[ "${{ github.event_name }}" == "push" ]]; then
            echo "Pushed to: ${{ github.ref }}"
            echo "Before: ${{ github.event.before }}"
            echo "After: ${{ github.event.after }}"
          fi
      
      - name: Notify PR status
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const issue_number = context.payload.pull_request.number;
            const message = `Workflow completed with status: ${context.job.status}`;
            github.rest.issues.createComment({
              issue_number: issue_number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });

  dialogflow_restore:
    needs: pr_workflow
    if: (github.event_name == 'pull_request' && github.event.pull_request.merged == true && (github.base_ref == 'develop' || github.base_ref == 'main')) || (github.event_name == 'push' && (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main'))
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
          
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          service_account_key: ${{ secrets.GOOGLE_CREDENTIALS }}
          export_default_credentials: true
          
      - name: Determine target environment
        id: determine-env
        run: |
          BRANCH=""
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            BRANCH="${{ github.base_ref }}"
          elif [[ "${{ github.event_name }}" == "push" ]]; then
            BRANCH="${{ github.ref }}"
            BRANCH=${BRANCH#refs/heads/}
          fi
          
          echo "Working with branch: $BRANCH"
          
          if [[ "$BRANCH" == "develop" ]]; then
            echo "TARGET_ENV=development" >> $GITHUB_ENV
            echo "PROJECT_ID=${{ secrets.DEV_PROJECT_ID }}" >> $GITHUB_ENV
            echo "AGENT_ID=${{ secrets.DEV_AGENT_ID }}" >> $GITHUB_ENV
            echo "LOCATION=${{ secrets.LOCATION_ID }}" >> $GITHUB_ENV
            echo "BRANCH=develop" >> $GITHUB_ENV
          elif [[ "$BRANCH" == "main" ]]; then
            echo "TARGET_ENV=production" >> $GITHUB_ENV
            echo "PROJECT_ID=${{ secrets.PRD_PROJECT_ID }}" >> $GITHUB_ENV
            echo "AGENT_ID=${{ secrets.PRD_AGENT_ID }}" >> $GITHUB_ENV
            echo "LOCATION=${{ secrets.LOCATION_ID }}" >> $GITHUB_ENV
            echo "BRANCH=main" >> $GITHUB_ENV
          fi
          
      - name: Restore agent from Git branch
        run: |
          sleep 30
          
          curl -X POST \
            -H "Authorization: Bearer $(gcloud auth print-access-token)" \
            -H "Content-Type: application/json" \
            "https://$LOCATION-dialogflow.googleapis.com/v3/projects/$PROJECT_ID/locations/$LOCATION/agents/$AGENT_ID:restore" \
            -d "{
              \"gitSource\": {
                \"trackingBranch\": \"$BRANCH\"
              }
            }"
            
      - name: Notify restoration status
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v6
        with:
          script: |
            const issue_number = context.payload.pull_request.number;
            const environment = process.env.TARGET_ENV;
            const branch = process.env.BRANCH;
            const message = `âœ… Dialogflow CX agent has been restored from ${branch} branch to ${environment} environment after PR #${issue_number} was merged.`;
            
            github.rest.issues.createComment({
              issue_number: issue_number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });
