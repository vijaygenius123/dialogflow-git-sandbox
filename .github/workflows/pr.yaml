name: Dialogflow CX Deployment

on:
  pull_request:
    types: [closed]
    branches:
      - develop
      - main

jobs:
  deploy_dialogflow:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          
      - name: Install cxcli
        run: npm install -g @xavidop/dialogflow-cx-cli
        
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          service_account_key: ${{ secrets.GOOGLE_CREDENTIALS }}
          export_default_credentials: true
          
      - name: Determine target environment
        id: determine-env
        run: |
          if [[ "${{ github.base_ref }}" == "develop" ]]; then
            echo "TARGET_ENV=development" >> $GITHUB_ENV
            echo "PROJECT_ID=${{ secrets.DEV_PROJECT_ID }}" >> $GITHUB_ENV
            echo "AGENT_ID=${{ secrets.DEV_AGENT_ID }}" >> $GITHUB_ENV
            echo "LOCATION=${{ secrets.LOCATION_ID }}" >> $GITHUB_ENV
          elif [[ "${{ github.base_ref }}" == "main" ]]; then
            echo "TARGET_ENV=staging" >> $GITHUB_ENV
            echo "PROJECT_ID=${{ secrets.STG_PROJECT_ID }}" >> $GITHUB_ENV
            echo "AGENT_ID=${{ secrets.STG_AGENT_ID }}" >> $GITHUB_ENV
            echo "LOCATION=${{ secrets.LOCATION_ID }}" >> $GITHUB_ENV
          fi
          
      - name: Export agent content
        run: |
          cxcli agent export --project-id $PROJECT_ID --location-id $LOCATION --agent-id $AGENT_ID --output-folder ./agent-export
          
      - name: Create version and update environment
        run: |
          VERSION_ID=$(cxcli version create --project-id $PROJECT_ID --location-id $LOCATION --agent-id $AGENT_ID --display-name "Release-${{ github.event.pull_request.number }}-$(date +%Y%m%d%H%M%S)")
          
          if [[ -n "$VERSION_ID" ]]; then
            ENV_ID=${{ secrets.DEV_ENV_ID }}
            if [[ "$TARGET_ENV" == "staging" ]]; then
              ENV_ID=${{ secrets.STG_ENV_ID }}
            fi
            
            cxcli environment update --project-id $PROJECT_ID --location-id $LOCATION --agent-id $AGENT_ID --environment-id $ENV_ID --version-id $VERSION_ID
            
            echo "Deployed version $VERSION_ID to $TARGET_ENV environment"
          else
            echo "Failed to create version"
            exit 1
          fi
          
      - name: Notify deployment status
        uses: actions/github-script@v6
        with:
          script: |
            const issue_number = context.payload.pull_request.number;
            const environment = process.env.TARGET_ENV;
            const message = `âœ… Dialogflow CX agent has been deployed to ${environment} environment.`;
            
            github.rest.issues.createComment({
              issue_number: issue_number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });
